{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-frontend-online-store/src/components/Main.jsx\";\nimport React from 'react';\nimport Categories from './Categories';\nimport { getCategories, getProductsFromCategoryAndQuery } from '../services/api';\nimport ProductList from './ProductList';\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n\n    this.getCategoriesList = async () => {\n      const categories = await getCategories();\n      this.setState({\n        categories\n      });\n    };\n\n    this.state = {\n      categories: [],\n      query: '',\n      productList: [],\n      categoryQuery: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.clickButton = this.clickButton.bind(this);\n    this.HandleCategory = this.HandleCategory.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCategoriesList();\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      value\n    } = target;\n    this.setState({\n      query: value\n    });\n  }\n\n  HandleCategory({\n    target\n  }) {\n    this.setState({\n      categoryQuery: target.value\n    });\n    this.clickButton();\n  }\n\n  async clickButton() {\n    console.log('foi chamado');\n    const {\n      query,\n      categoryQuery\n    } = this.state;\n    let listagem = '';\n    listagem = await getProductsFromCategoryAndQuery(categoryQuery, query);\n    this.setState({\n      productList: listagem.results\n    });\n    console.log(listagem.results);\n  }\n\n  render() {\n    const {\n      categories,\n      productList\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input-search\",\n      \"data-testid\": \"query-input\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"query-button\",\n      onClick: this.clickButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"home-initial-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Digite algum termo de pesquisa ou escolha uma categoria.\")), /*#__PURE__*/React.createElement(Categories, {\n      categories: categories,\n      callback: this.HandleCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ProductList, {\n      Lista: productList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-frontend-online-store/src/components/Main.jsx"],"names":["React","Categories","getCategories","getProductsFromCategoryAndQuery","ProductList","Main","Component","constructor","getCategoriesList","categories","setState","state","query","productList","categoryQuery","handleChange","bind","clickButton","HandleCategory","componentDidMount","target","value","console","log","listagem","results","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,aAAT,EAAwBC,+BAAxB,QAA+D,iBAA/D;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAsBdC,iBAtBc,GAsBM,YAAY;AAC9B,YAAMC,UAAU,GAAG,MAAMP,aAAa,EAAtC;AACA,WAAKQ,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACD,KAzBa;;AAEZ,SAAKE,KAAL,GAAa;AACXF,MAAAA,UAAU,EAAE,EADD;AAEXG,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,WAAW,EAAE,EAHF;AAIXC,MAAAA,aAAa,EAAE;AAJJ,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKX,iBAAL;AACD;;AAEDO,EAAAA,YAAY,CAAC;AAAEK,IAAAA;AAAF,GAAD,EAAa;AACvB,UAAM;AAAEC,MAAAA;AAAF,QAAYD,MAAlB;AACA,SAAKV,QAAL,CAAc;AAAEE,MAAAA,KAAK,EAAES;AAAT,KAAd;AACD;;AAODH,EAAAA,cAAc,CAAC;AAAEE,IAAAA;AAAF,GAAD,EAAa;AACzB,SAAKV,QAAL,CAAc;AAAEI,MAAAA,aAAa,EAAEM,MAAM,CAACC;AAAxB,KAAd;AACA,SAAKJ,WAAL;AACD;;AAED,QAAMA,WAAN,GAAoB;AAClBK,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,UAAM;AAAEX,MAAAA,KAAF;AAASE,MAAAA;AAAT,QAA2B,KAAKH,KAAtC;AACA,QAAIa,QAAQ,GAAG,EAAf;AACAA,IAAAA,QAAQ,GAAG,MAAMrB,+BAA+B,CAACW,aAAD,EAAgBF,KAAhB,CAAhD;AACA,SAAKF,QAAL,CAAc;AAAEG,MAAAA,WAAW,EAAEW,QAAQ,CAACC;AAAxB,KAAd;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,OAArB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA,UAAF;AAAcI,MAAAA;AAAd,QAA8B,KAAKF,KAAzC;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,qBAAY,aAHd;AAIE,MAAA,QAAQ,EAAG,KAAKI,YAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAY,cAFd;AAGE,MAAA,OAAO,EAAG,KAAKE,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAcE;AACE,qBAAY,sBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAdF,CADF,eAqBE,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAGR,UAAzB;AAAsC,MAAA,QAAQ,EAAG,KAAKS,cAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,eAsBE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAGL,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,CADF;AA0BD;;AAvEgC;;AA0EnC,eAAeR,IAAf","sourcesContent":["import React from 'react';\nimport Categories from './Categories';\nimport { getCategories, getProductsFromCategoryAndQuery } from '../services/api';\nimport ProductList from './ProductList';\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      categories: [],\n      query: '',\n      productList: [],\n      categoryQuery: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.clickButton = this.clickButton.bind(this);\n    this.HandleCategory = this.HandleCategory.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCategoriesList();\n  }\n\n  handleChange({ target }) {\n    const { value } = target;\n    this.setState({ query: value });\n  }\n\n  getCategoriesList = async () => {\n    const categories = await getCategories();\n    this.setState({ categories });\n  }\n\n  HandleCategory({ target }) {\n    this.setState({ categoryQuery: target.value });\n    this.clickButton();\n  }\n\n  async clickButton() {\n    console.log('foi chamado');\n    const { query, categoryQuery } = this.state;\n    let listagem = '';\n    listagem = await getProductsFromCategoryAndQuery(categoryQuery, query);\n    this.setState({ productList: listagem.results });\n    console.log(listagem.results);\n  }\n\n  render() {\n    const { categories, productList } = this.state;\n\n    return (\n      <div>\n        <form className=\"form-main\">\n          <input\n            type=\"text\"\n            className=\"input-search\"\n            data-testid=\"query-input\"\n            onChange={ this.handleChange }\n          />\n          <button\n            type=\"button\"\n            data-testid=\"query-button\"\n            onClick={ this.clickButton }\n          >\n            Search\n          </button>\n          <span\n            data-testid=\"home-initial-message\"\n          >\n            Digite algum termo de pesquisa ou escolha uma categoria.\n          </span>\n        </form>\n        <Categories categories={ categories } callback={ this.HandleCategory } />\n        <ProductList Lista={ productList } />\n      </div>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}