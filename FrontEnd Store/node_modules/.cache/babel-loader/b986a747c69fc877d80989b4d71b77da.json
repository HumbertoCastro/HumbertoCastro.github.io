{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-frontend-online-store/src/components/Main.jsx\";\nimport React from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport Categories from './Categories';\nimport { getCategories, getProductsFromCategoryAndQuery } from '../services/api';\nimport ProductList from './ProductList';\nimport Cart from './Cart';\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n\n    this.getCategoriesList = async () => {\n      const categories = await getCategories();\n      this.setState({\n        categories\n      });\n    };\n\n    this.state = {\n      categories: [],\n      query: '',\n      productList: [],\n      categoryQuery: '',\n      cartItem: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.clickButton = this.clickButton.bind(this);\n    this.HandleCategory = this.HandleCategory.bind(this);\n    this.addToCartCallback = this.addToCartCallback.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCategoriesList();\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      value\n    } = target;\n    this.setState({\n      query: value\n    });\n  }\n\n  HandleCategory({\n    target\n  }) {\n    this.setState({\n      categoryQuery: target.value\n    }, () => {\n      this.clickButton();\n    });\n  }\n\n  clickButton() {\n    const {\n      query,\n      categoryQuery\n    } = this.state;\n    let listagem = '';\n    getProductsFromCategoryAndQuery(categoryQuery, query).then(x => {\n      listagem = x;\n      console.log(x.results);\n      this.setState({\n        productList: listagem.results\n      });\n    });\n  }\n\n  addToCartCallback(item) {\n    console.log(item);\n    this.setState({\n      cartItem: item\n    });\n  }\n\n  render() {\n    const {\n      categories,\n      productList,\n      cartItem\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input-search\",\n      \"data-testid\": \"query-input\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"query-button\",\n      onClick: this.clickButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"home-initial-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"Digite algum termo de pesquisa ou escolha uma categoria.\"), /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/Cart\",\n      render: () => /*#__PURE__*/React.createElement(Cart, {\n        items: cartItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 48\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      \"data-testid\": \"shopping-cart-button\",\n      to: \"/Cart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, \"Carrinho\"))), /*#__PURE__*/React.createElement(Categories, {\n      categories: categories,\n      callback: this.HandleCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ProductList, {\n      Lista: productList,\n      callback: this.addToCartCallback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-frontend-online-store/src/components/Main.jsx"],"names":["React","BrowserRouter","Route","Link","Categories","getCategories","getProductsFromCategoryAndQuery","ProductList","Cart","Main","Component","constructor","getCategoriesList","categories","setState","state","query","productList","categoryQuery","cartItem","handleChange","bind","clickButton","HandleCategory","addToCartCallback","componentDidMount","target","value","listagem","then","x","console","log","results","item","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport Categories from './Categories';\nimport { getCategories, getProductsFromCategoryAndQuery } from '../services/api';\nimport ProductList from './ProductList';\nimport Cart from './Cart';\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      categories: [],\n      query: '',\n      productList: [],\n      categoryQuery: '',\n      cartItem: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.clickButton = this.clickButton.bind(this);\n    this.HandleCategory = this.HandleCategory.bind(this);\n    this.addToCartCallback = this.addToCartCallback.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCategoriesList();\n  }\n\n  handleChange({ target }) {\n    const { value } = target;\n    this.setState({ query: value });\n  }\n\n  getCategoriesList = async () => {\n    const categories = await getCategories();\n    this.setState({ categories });\n  }\n\n  HandleCategory({ target }) {\n    this.setState({ categoryQuery: target.value }, () => {\n      this.clickButton();\n    });\n  }\n\n  clickButton() {\n    const { query, categoryQuery } = this.state;\n    let listagem = '';\n    getProductsFromCategoryAndQuery(categoryQuery, query)\n      .then((x) => {\n        listagem = x;\n        console.log(x.results);\n        this.setState({ productList: listagem.results });\n      });\n  }\n\n  addToCartCallback(item) {\n    console.log(item);\n    this.setState({ cartItem: item });\n  }\n\n  render() {\n    const { categories, productList, cartItem } = this.state;\n\n    return (\n      <div>\n        <form className=\"form-main\">\n          <input\n            type=\"text\"\n            className=\"input-search\"\n            data-testid=\"query-input\"\n            onChange={ this.handleChange }\n          />\n          <button\n            type=\"button\"\n            data-testid=\"query-button\"\n            onClick={ this.clickButton }\n          >\n            Search\n          </button>\n          <span\n            data-testid=\"home-initial-message\"\n          >\n            Digite algum termo de pesquisa ou escolha uma categoria.\n          </span>\n          <BrowserRouter>\n            <Route path=\"/Cart\" render={ () => <Cart items={ cartItem } /> } />\n            <Link data-testid=\"shopping-cart-button\" to=\"/Cart\">Carrinho</Link>\n          </BrowserRouter>\n        </form>\n        <Categories categories={ categories } callback={ this.HandleCategory } />\n        <ProductList Lista={ productList } callback={ this.addToCartCallback } />\n      </div>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}