{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-tryunfo/src/App.js\";\nimport React from 'react';\nimport Card from './components/Card';\nimport Form from './components/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cardName: '',\n      cardDescription: '',\n      cardAttr1: '0',\n      cardAttr2: '0',\n      cardAttr3: '0',\n      cardImage: '',\n      cardRare: 'normal',\n      cardTrunfo: false,\n      hasTrunfo: false,\n      isSaveButtonDisabled: true,\n      cards: []\n    };\n    this.ShowCards = this.ShowCards.bind(this);\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onSaveButtonClick = this.onSaveButtonClick.bind(this);\n  }\n\n  onSaveButtonClick() {\n    const {\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardName,\n      cardDescription,\n      cardImage,\n      cardRare,\n      cardTrunfo\n    } = this.state;\n    const objectCard = {\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardName,\n      cardDescription,\n      cardImage,\n      cardRare,\n      cardTrunfo\n    };\n    this.setState({\n      cards: objectCard\n    });\n\n    if (cardTrunfo) {\n      this.setState({\n        hasTrunfo: true\n      });\n    }\n\n    const inputs = document.querySelectorAll('.input');\n\n    for (let i = 0; i < inputs.length; i += 1) {\n      if (inputs[i].type === 'number') {\n        inputs[i].value = 0;\n      } else {\n        inputs[i].value = '';\n      }\n    }\n  }\n\n  onInputChange({\n    target: {\n      name,\n      value,\n      type,\n      checked\n    }\n  }) {\n    const nmb = 210;\n    const maxnmb = 90;\n    let atrValue = value;\n\n    if (type === 'checkbox') {\n      atrValue = checked;\n    }\n\n    this.setState({\n      [name]: atrValue\n    }, () => {\n      const {\n        cardAttr1,\n        cardAttr2,\n        cardAttr3,\n        cardName,\n        cardDescription,\n        cardImage\n      } = this.state;\n      let attrs = [cardAttr1, cardAttr2, cardAttr3];\n      const texts = [cardName, cardDescription, cardImage];\n      attrs = attrs.map(x => parseInt(x, 10));\n      const v = parseInt(cardAttr1, 10) + parseInt(cardAttr2, 10) + parseInt(cardAttr3, 10);\n\n      if (attrs.some(x => x > maxnmb || x < 0) || texts.some(x => x === '') || v > nmb) {\n        this.setState({\n          isSaveButtonDisabled: true\n        });\n      } else {\n        this.setState({\n          isSaveButtonDisabled: false\n        });\n      }\n    });\n  }\n\n  ShowCards() {\n    const {\n      cards\n    } = this.state;\n    cards.map(x => {\n      const {\n        cardAttr1,\n        cardAttr2,\n        cardAttr3,\n        cardName,\n        cardDescription,\n        cardImage,\n        cardRare,\n        cardTrunfo\n      } = x;\n      return /*#__PURE__*/_jsxDEV(Card, {\n        cardName: cardName,\n        cardDescription: cardDescription,\n        cardAttr1: cardAttr1,\n        cardAttr2: cardAttr2,\n        cardAttr3: cardAttr3,\n        cardImage: cardImage,\n        cardRare: cardRare,\n        cardTrunfo: cardTrunfo,\n        hasTrunfo: hasTrunfo\n      }, cardName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n      hasTrunfo,\n      isSaveButtonDisabled\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tryunfo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        cardName: cardName,\n        cardDescription: cardDescription,\n        cardAttr1: cardAttr1,\n        cardAttr2: cardAttr2,\n        cardAttr3: cardAttr3,\n        cardImage: cardImage,\n        cardRare: cardRare,\n        cardTrunfo: cardTrunfo,\n        hasTrunfo: hasTrunfo,\n        onSaveButtonClick: this.onSaveButtonClick,\n        onInputChange: this.onInputChange,\n        isSaveButtonDisabled: isSaveButtonDisabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        cardName: cardName,\n        cardDescription: cardDescription,\n        cardAttr1: cardAttr1,\n        cardAttr2: cardAttr2,\n        cardAttr3: cardAttr3,\n        cardImage: cardImage,\n        cardRare: cardRare,\n        cardTrunfo: cardTrunfo,\n        hasTrunfo: hasTrunfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Suas cartas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), this.ShowCards()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-tryunfo/src/App.js"],"names":["React","Card","Form","App","Component","constructor","state","cardName","cardDescription","cardAttr1","cardAttr2","cardAttr3","cardImage","cardRare","cardTrunfo","hasTrunfo","isSaveButtonDisabled","cards","ShowCards","bind","onInputChange","onSaveButtonClick","objectCard","setState","inputs","document","querySelectorAll","i","length","type","value","target","name","checked","nmb","maxnmb","atrValue","attrs","texts","map","x","parseInt","v","some","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Card from './components/Card';\nimport Form from './components/Form';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cardName: '',\n      cardDescription: '',\n      cardAttr1: '0',\n      cardAttr2: '0',\n      cardAttr3: '0',\n      cardImage: '',\n      cardRare: 'normal',\n      cardTrunfo: false,\n      hasTrunfo: false,\n      isSaveButtonDisabled: true,\n      cards: [],\n    };\n\n    this.ShowCards = this.ShowCards.bind(this);\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onSaveButtonClick = this.onSaveButtonClick.bind(this);\n  }\n\n  onSaveButtonClick() {\n    const {\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardName,\n      cardDescription,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n    } = this.state;\n\n    const objectCard = {\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardName,\n      cardDescription,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n    };\n\n    this.setState({ cards: objectCard });\n    if (cardTrunfo) {\n      this.setState({ hasTrunfo: true });\n    }\n    const inputs = document.querySelectorAll('.input');\n    for (let i = 0; i < inputs.length; i += 1) {\n      if (inputs[i].type === 'number') {\n        inputs[i].value = 0;\n      } else {\n        inputs[i].value = '';\n      }\n    }\n  }\n\n  onInputChange({ target: { name, value, type, checked } }) {\n    const nmb = 210;\n    const maxnmb = 90;\n    let atrValue = value;\n    if (type === 'checkbox') {\n      atrValue = checked;\n    }\n    this.setState({ [name]: atrValue }, () => {\n      const {\n        cardAttr1,\n        cardAttr2,\n        cardAttr3,\n        cardName,\n        cardDescription,\n        cardImage,\n      } = this.state;\n      let attrs = [cardAttr1, cardAttr2, cardAttr3];\n      const texts = [cardName, cardDescription, cardImage];\n      attrs = attrs.map((x) => parseInt(x, 10));\n      const v = parseInt(cardAttr1, 10)\n      + parseInt(cardAttr2, 10) + parseInt(cardAttr3, 10);\n      if (attrs.some((x) => x > maxnmb || x < 0)\n      || texts.some((x) => x === '')\n      || v > nmb) {\n        this.setState({ isSaveButtonDisabled: true });\n      } else {\n        this.setState({ isSaveButtonDisabled: false });\n      }\n    });\n  }\n\n  ShowCards() {\n    const { cards } = this.state;\n    cards.map((x) => {\n      const {\n        cardAttr1,\n        cardAttr2,\n        cardAttr3,\n        cardName,\n        cardDescription,\n        cardImage,\n        cardRare,\n        cardTrunfo,\n      } = x;\n      return (\n        <Card\n          key={ cardName }\n          cardName={ cardName }\n          cardDescription={ cardDescription }\n          cardAttr1={ cardAttr1 }\n          cardAttr2={ cardAttr2 }\n          cardAttr3={ cardAttr3 }\n          cardImage={ cardImage }\n          cardRare={ cardRare }\n          cardTrunfo={ cardTrunfo }\n          hasTrunfo={ hasTrunfo }\n        />);\n    });\n  }\n\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n      hasTrunfo,\n      isSaveButtonDisabled,\n    } = this.state;\n    return (\n      <div>\n        <h1>Tryunfo</h1>\n        <Form\n          cardName={ cardName }\n          cardDescription={ cardDescription }\n          cardAttr1={ cardAttr1 }\n          cardAttr2={ cardAttr2 }\n          cardAttr3={ cardAttr3 }\n          cardImage={ cardImage }\n          cardRare={ cardRare }\n          cardTrunfo={ cardTrunfo }\n          hasTrunfo={ hasTrunfo }\n          onSaveButtonClick={ this.onSaveButtonClick }\n          onInputChange={ this.onInputChange }\n          isSaveButtonDisabled={ isSaveButtonDisabled }\n        />\n        <Card\n          cardName={ cardName }\n          cardDescription={ cardDescription }\n          cardAttr1={ cardAttr1 }\n          cardAttr2={ cardAttr2 }\n          cardAttr3={ cardAttr3 }\n          cardImage={ cardImage }\n          cardRare={ cardRare }\n          cardTrunfo={ cardTrunfo }\n          hasTrunfo={ hasTrunfo }\n        />\n\n        <h1>Suas cartas</h1>\n        {this.ShowCards()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}