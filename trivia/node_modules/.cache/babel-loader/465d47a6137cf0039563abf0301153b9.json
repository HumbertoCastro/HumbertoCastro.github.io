{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-trivia-react-redux/src/components/Header.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport md5 from 'crypto-js/md5';\nimport { getGravatarImage } from '../actions/Index';\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      img: 'https//',\n      loading: true\n    };\n    this.renderDados = this.renderDados.bind(this);\n    this.renderStruct = this.renderStruct.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderDados();\n  }\n\n  renderDados() {\n    const {\n      email\n    } = this.props;\n    const hash = md5(email).toString();\n    this.setState({\n      img: `https://www.gravatar.com/avatar/${hash}`,\n      loading: false\n    }, () => {\n      const {\n        img\n      } = this.state;\n      const {\n        getImage\n      } = this.props;\n      getImage(img);\n    });\n  }\n\n  renderStruct() {\n    const {\n      email,\n      name,\n      score\n    } = this.props;\n    const {\n      img\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, email), /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"header-player-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"header-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, score), /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"imagemJogador\",\n      src: img,\n      width: \"100px\",\n      height: \"100px\",\n      \"data-testid\": \"header-profile-picture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n    return loading ? null : this.renderStruct();\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  email: state.player.gravatarEmail,\n  name: state.player.name,\n  score: state.player.score\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getImage: url => dispatch(getGravatarImage(url))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  getImage: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-trivia-react-redux/src/components/Header.js"],"names":["React","Component","connect","PropTypes","md5","getGravatarImage","Header","constructor","state","img","loading","renderDados","bind","renderStruct","componentDidMount","email","props","hash","toString","setState","getImage","name","score","render","mapStateToProps","player","gravatarEmail","mapDispatchToProps","dispatch","url","propTypes","string","isRequired","number","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport md5 from 'crypto-js/md5';\nimport { getGravatarImage } from '../actions/Index';\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      img: 'https//',\n      loading: true,\n    };\n    this.renderDados = this.renderDados.bind(this);\n    this.renderStruct = this.renderStruct.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderDados();\n  }\n\n  renderDados() {\n    const { email } = this.props;\n    const hash = md5(email).toString();\n    this.setState({ img: `https://www.gravatar.com/avatar/${hash}`, loading: false }, () => {\n      const { img } = this.state;\n      const { getImage } = this.props;\n      getImage(img);\n    });\n  }\n\n  renderStruct() {\n    const { email, name, score } = this.props;\n    const { img } = this.state;\n    return (\n      <div>\n        <h1>{ email }</h1>\n        <h2 data-testid=\"header-player-name\">{ name }</h2>\n        <p data-testid=\"header-score\">{ score }</p>\n        <img\n          alt=\"imagemJogador\"\n          src={ img }\n          width=\"100px\"\n          height=\"100px\"\n          data-testid=\"header-profile-picture\"\n        />\n      </div>);\n  }\n\n  render() {\n    const { loading } = this.state;\n    return (loading ? null : this.renderStruct());\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.player.gravatarEmail,\n  name: state.player.name,\n  score: state.player.score,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getImage: (url) => dispatch(getGravatarImage(url)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  getImage: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}