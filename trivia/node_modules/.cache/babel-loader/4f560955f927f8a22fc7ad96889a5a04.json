{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-trivia-react-redux/src/pages/Feedback.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport md5 from 'crypto-js/md5';\n\nclass Feedback extends Component {\n  constructor() {\n    super();\n    this.state = {\n      img: ''\n    };\n    this.renderDados = this.renderDados.bind(this);\n  }\n\n  renderDados() {\n    const {\n      email\n    } = this.props;\n    const hash = md5(email).toString();\n    this.setState({\n      img: `https://www.gravatar.com/avatar/${hash}`\n    });\n  }\n\n  render() {\n    const {\n      img\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": \"header-profile-picture\",\n      src: img,\n      alt: \"profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  email: state.player.gravatarEmail\n});\n\nexport default connect(mapStateToProps)(Feedback);\nFeedback.propTypes = {\n  email: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-trivia-react-redux/src/pages/Feedback.js"],"names":["React","Component","connect","PropTypes","md5","Feedback","constructor","state","img","renderDados","bind","email","props","hash","toString","setState","render","mapStateToProps","player","gravatarEmail","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC/BK,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE;AADM,KAAb;AAGA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEE,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,UAAMC,IAAI,GAAGT,GAAG,CAACO,KAAD,CAAH,CAAWG,QAAX,EAAb;AACA,SAAKC,QAAL,CAAc;AAAEP,MAAAA,GAAG,EAAG,mCAAkCK,IAAK;AAA/C,KAAd;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA;AAAF,QAAU,KAAKD,KAArB;AACA,wBACE;AAAK,qBAAY,wBAAjB;AAA0C,MAAA,GAAG,EAAGC,GAAhD;AAAsD,MAAA,GAAG,EAAC,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AApB8B;;AAuBjC,MAAMS,eAAe,GAAIV,KAAD,KAAY;AAClCI,EAAAA,KAAK,EAAEJ,KAAK,CAACW,MAAN,CAAaC;AADc,CAAZ,CAAxB;;AAIA,eAAejB,OAAO,CAACe,eAAD,CAAP,CAAyBZ,QAAzB,CAAf;AAEAA,QAAQ,CAACe,SAAT,GAAqB;AACnBT,EAAAA,KAAK,EAAER,SAAS,CAACkB,MAAV,CAAiBC;AADL,CAArB","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport md5 from 'crypto-js/md5';\n\nclass Feedback extends Component {\n  constructor() {\n    super();\n    this.state = {\n      img: '',\n    };\n    this.renderDados = this.renderDados.bind(this);\n  }\n\n  renderDados() {\n    const { email } = this.props;\n    const hash = md5(email).toString();\n    this.setState({ img: `https://www.gravatar.com/avatar/${hash}` });\n  }\n\n  render() {\n    const { img } = this.state;\n    return (\n      <img data-testid=\"header-profile-picture\" src={ img } alt=\"profile\" />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.player.gravatarEmail,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n\nFeedback.propTypes = {\n  email: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}