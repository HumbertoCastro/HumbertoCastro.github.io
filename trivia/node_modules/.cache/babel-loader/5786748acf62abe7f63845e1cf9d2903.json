{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-trivia-react-redux/src/pages/Feedback.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport md5 from 'crypto-js/md5';\n\nclass Feedback extends Component {\n  constructor() {\n    super();\n\n    this.btnClickLogin = () => {\n      const {\n        history\n      } = this.props;\n      history.push('/');\n    };\n\n    this.btnClickRanking = () => {\n      const {\n        history\n      } = this.props;\n      history.push('/ranking');\n    };\n\n    this.state = {\n      img: ''\n    };\n    this.renderDados = this.renderDados.bind(this);\n    this.renderFeedback = this.renderFeedback.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderDados();\n  }\n\n  renderFeedback() {\n    const {\n      questionsCorrect\n    } = this.props;\n    console.log(questionsCorrect);\n    const media = 3;\n\n    if (questionsCorrect < media) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        \"data-testid\": \"feedback-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }\n      }, \"Could be better...\");\n    }\n\n    if (questionsCorrect === media) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        \"data-testid\": \"feedback-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }, \"Well Done!\");\n    }\n\n    if (questionsCorrect > media) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        \"data-testid\": \"feedback-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }, \"Well Done!\");\n    }\n  }\n\n  renderDados() {\n    const {\n      email\n    } = this.props; // console.log(email);\n\n    const hash = md5(email).toString();\n    this.setState({\n      img: `https://www.gravatar.com/avatar/${hash}`\n    });\n  }\n\n  render() {\n    const {\n      img\n    } = this.state;\n    const {\n      name,\n      score,\n      questionsCorrect\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": \"header-profile-picture\",\n      src: img,\n      alt: \"profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      \"data-testid\": \"header-player-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"header-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, score), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, this.renderFeedback()), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"feedback-total-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, score), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"feedback-total-question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, questionsCorrect)), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"btn-play-again\",\n      type: \"button\",\n      onClick: this.btnClickLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"Play Again\"), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"btn-ranking\",\n      type: \"button\",\n      onClick: this.btnClickRanking,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, \"Ranking\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  email: state.player.gravatarEmail,\n  name: state.player.name,\n  score: state.player.score,\n  questionsCorrect: state.player.questionsCorrect\n});\n\nexport default connect(mapStateToProps)(Feedback);\nFeedback.propTypes = {\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  score: PropTypes.string.isRequired,\n  questionsCorrect: PropTypes.string.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-trivia-react-redux/src/pages/Feedback.js"],"names":["React","Component","connect","PropTypes","md5","Feedback","constructor","btnClickLogin","history","props","push","btnClickRanking","state","img","renderDados","bind","renderFeedback","componentDidMount","questionsCorrect","console","log","media","email","hash","toString","setState","render","name","score","mapStateToProps","player","gravatarEmail","propTypes","string","isRequired","shape","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport md5 from 'crypto-js/md5';\n\nclass Feedback extends Component {\n  constructor() {\n    super();\n    this.state = {\n      img: '',\n    };\n    this.renderDados = this.renderDados.bind(this);\n    this.renderFeedback = this.renderFeedback.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderDados();\n  }\n\n  btnClickLogin = () => {\n    const { history } = this.props;\n    history.push('/');\n  }\n\n  btnClickRanking = () => {\n    const { history } = this.props;\n    history.push('/ranking');\n  }\n\n  renderFeedback() {\n    const { questionsCorrect } = this.props;\n    console.log(questionsCorrect);\n    const media = 3;\n    if (questionsCorrect < media) {\n      return (<p data-testid=\"feedback-text\">Could be better...</p>);\n    }\n    if (questionsCorrect === media) {\n      return (<p data-testid=\"feedback-text\">Well Done!</p>);\n    }\n    if (questionsCorrect > media) {\n      return (<p data-testid=\"feedback-text\">Well Done!</p>);\n    }\n  }\n\n  renderDados() {\n    const { email } = this.props;\n    // console.log(email);\n    const hash = md5(email).toString();\n    this.setState({ img: `https://www.gravatar.com/avatar/${hash}` });\n  }\n\n  render() {\n    const { img } = this.state;\n    const { name, score, questionsCorrect } = this.props;\n    return (\n      <>\n        <div>\n          <img data-testid=\"header-profile-picture\" src={ img } alt=\"profile\" />\n          <h1 data-testid=\"header-player-name\">{name}</h1>\n          <p data-testid=\"header-score\">{score}</p>\n          <div>{this.renderFeedback()}</div>\n          <p data-testid=\"feedback-total-score\">{score}</p>\n          <p data-testid=\"feedback-total-question\">{ questionsCorrect }</p>\n        </div>\n        {/* <div>\n          <p data-testid=\"feedback-total-question\">{ `Correct questions ${score}` }</p>\n          <p data-testid=\"feedback-total-score\">{ `Total score ${score * 2}` }</p>\n        </div> */}\n        <button\n          data-testid=\"btn-play-again\"\n          type=\"button\"\n          onClick={ this.btnClickLogin }\n        >\n          Play Again\n        </button>\n        <button\n          data-testid=\"btn-ranking\"\n          type=\"button\"\n          onClick={ this.btnClickRanking }\n        >\n          Ranking\n        </button>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.player.gravatarEmail,\n  name: state.player.name,\n  score: state.player.score,\n  questionsCorrect: state.player.questionsCorrect,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n\nFeedback.propTypes = {\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  score: PropTypes.string.isRequired,\n  questionsCorrect: PropTypes.string.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}