{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-trivia-react-redux/src/pages/Trivia.js\";\nimport React, { Component } from 'react';\nimport Header from '../components/Header';\nimport shuffle from '../services/shuffle';\n\nclass Trivia extends Component {\n  constructor() {\n    super();\n    this.state = {\n      perguntas: '',\n      loading: true\n    };\n    this.request = this.request.bind(this);\n    this.renderPerguntas = this.renderPerguntas.bind(this);\n    this.respondeu = this.respondeu.bind(this);\n  }\n\n  componentDidMount() {\n    this.request();\n  }\n\n  respondeu(_ref) {\n    let {\n      target\n    } = _ref;\n    const resposta = target.innerHTML;\n    const {\n      perguntas\n    } = this.state;\n\n    if (perguntas.results.some(x => x.correct_answer === resposta)) {\n      // AQUI É ONDE VC IMPLEMENTA O CODIGO DE RESPOSTA CERTA\n      console.log('dd');\n    }\n  }\n\n  request() {\n    const token = localStorage.getItem('token');\n    fetch(`https://opentdb.com/api.php?amount=5&token=${token}`).then(r => r.json()).then(perguntas => {\n      console.log('cheguei dentro do fetch');\n      this.setState({\n        perguntas,\n        loading: false\n      });\n    });\n  }\n\n  renderPerguntas() {\n    const {\n      perguntas\n    } = this.state;\n    console.log('entrei aqui');\n    return perguntas.results.map(quest => {\n      const {\n        category,\n        dificulty,\n        question\n      } = quest;\n      const Alternativas = [quest.correct_answer, ...quest.incorrect_answers];\n      const perguntasRand = shuffle(Alternativas);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: dificulty,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        \"data-testid\": \"question-category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, category), /*#__PURE__*/React.createElement(\"p\", {\n        \"data-testid\": \"question-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, question), /*#__PURE__*/React.createElement(\"div\", {\n        \"data-testid\": \"answer-options\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, perguntasRand.map((x, Index) => {\n        if (perguntas.results.some(f => f.correct_answer === x)) {\n          return /*#__PURE__*/React.createElement(\"button\", {\n            onClick: this.respondeu,\n            type: \"button\",\n            key: Index,\n            \"data-testid\": \"correct-answer\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }\n          }, x);\n        }\n\n        return /*#__PURE__*/React.createElement(\"button\", {\n          onClick: this.respondeu,\n          type: \"button\",\n          key: Index,\n          \"data-testid\": `wrong-answer-${Index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }\n        }, x);\n      })));\n    });\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, loading ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 26\n      }\n    }, \"carregando\") : this.renderPerguntas()));\n  }\n\n}\n\nexport default Trivia;","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-trivia-react-redux/src/pages/Trivia.js"],"names":["React","Component","Header","shuffle","Trivia","constructor","state","perguntas","loading","request","bind","renderPerguntas","respondeu","componentDidMount","target","resposta","innerHTML","results","some","x","correct_answer","console","log","token","localStorage","getItem","fetch","then","r","json","setState","map","quest","category","dificulty","question","Alternativas","incorrect_answers","perguntasRand","Index","f","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport shuffle from '../services/shuffle';\n\nclass Trivia extends Component {\n  constructor() {\n    super();\n    this.state = {\n      perguntas: '',\n      loading: true,\n    };\n    this.request = this.request.bind(this);\n    this.renderPerguntas = this.renderPerguntas.bind(this);\n    this.respondeu = this.respondeu.bind(this);\n  }\n\n  componentDidMount() {\n    this.request();\n  }\n\n  respondeu({ target }) {\n    const resposta = target.innerHTML;\n    const { perguntas } = this.state;\n    if (perguntas.results.some((x) => x.correct_answer === resposta)) {\n      // AQUI É ONDE VC IMPLEMENTA O CODIGO DE RESPOSTA CERTA\n      console.log('dd');\n    }\n  }\n\n  request() {\n    const token = localStorage.getItem('token');\n    fetch(`https://opentdb.com/api.php?amount=5&token=${token}`)\n      .then((r) => r.json()).then((perguntas) => {\n        console.log('cheguei dentro do fetch');\n        this.setState({ perguntas, loading: false });\n      });\n  }\n\n  renderPerguntas() {\n    const { perguntas } = this.state;\n    console.log('entrei aqui');\n    return (\n      perguntas.results.map((quest) => {\n        const {\n          category,\n          dificulty,\n          question,\n        } = quest;\n        const Alternativas = [quest.correct_answer, ...quest.incorrect_answers];\n        const perguntasRand = shuffle(Alternativas);\n        return (\n          <div key={ dificulty }>\n            <p data-testid=\"question-category\">{ category }</p>\n            <p data-testid=\"question-text\">{ question }</p>\n            <div data-testid=\"answer-options\">\n              {perguntasRand.map((x, Index) => {\n                if (perguntas.results.some((f) => f.correct_answer === x)) {\n                  return (\n                    <button\n                      onClick={ this.respondeu }\n                      type=\"button\"\n                      key={ Index }\n                      data-testid=\"correct-answer\"\n                    >\n                      { x }\n                    </button>);\n                }\n                return (\n                  <button\n                    onClick={ this.respondeu }\n                    type=\"button\"\n                    key={ Index }\n                    data-testid={ `wrong-answer-${Index}` }\n                  >\n                    { x }\n                  </button>);\n              })}\n            </div>\n          </div>\n        );\n      })\n    );\n  }\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <div>\n        <Header />\n        <div>{ loading ? <p>carregando</p> : this.renderPerguntas() }</div>\n      </div>\n    );\n  }\n}\n\nexport default Trivia;\n"]},"metadata":{},"sourceType":"module"}