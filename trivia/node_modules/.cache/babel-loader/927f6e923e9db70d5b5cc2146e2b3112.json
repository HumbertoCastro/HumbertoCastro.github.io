{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-trivia-react-redux/src/components/Timer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateIndex as update, updateButtons as buttonsUpdate, getTimer as timerUpdate } from '../actions/Index';\n\nclass Timer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      timer: 30,\n      stateIndex: 0\n    };\n    this.renderFunction = this.renderFunction.bind(this);\n  }\n\n  componentDidMount() {\n    const INTERVAL = 1000;\n    const {\n      timer\n    } = this.state;\n    setInterval(() => {\n      if (timer !== 0) {\n        this.setState(prev => this.setState({\n          timer: prev.timer - 1\n        }));\n      }\n    }, INTERVAL);\n  }\n\n  componentDidUpdate() {\n    const {\n      timer,\n      stateIndex\n    } = this.state;\n    const {\n      index,\n      getTimer,\n      isColor\n    } = this.props;\n\n    if (isColor) {\n      getTimer(timer);\n    }\n\n    if (stateIndex !== index) {\n      // trigger caso haja alguma alteração no index\n      this.setNewState();\n    }\n\n    if (timer === 0) {\n      this.updateTimer();\n    }\n  }\n\n  setNewState() {\n    // caso a pessoa responda.\n    const {\n      index\n    } = this.props;\n    this.setState({\n      stateIndex: index,\n      timer: 30\n    });\n    const {\n      stateIndex\n    } = this.state;\n    return stateIndex;\n  }\n\n  updateTimer() {\n    // caso o tempo esgote.\n    const {\n      updateIndex,\n      updateRespDisabled\n    } = this.props;\n    updateRespDisabled();\n    this.setState({\n      timer: 30\n    }, () => {\n      const INTERVAL = 5000;\n      setTimeout(() => {\n        this.setState({\n          timer: 30\n        });\n        updateRespDisabled();\n        updateIndex();\n      }, INTERVAL);\n    });\n  }\n\n  renderFunction() {\n    const {\n      index\n    } = this.props;\n    const {\n      timer\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, timer, ' ', \"segundos restantes\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, index + 1, \"\\xAA pergunta\"));\n  }\n\n  render() {\n    const {\n      isRespDisabled\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"timer-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, isRespDisabled ? null : this.renderFunction());\n  }\n\n}\n\nTimer.propTypes = {\n  index: PropTypes.number.isRequired,\n  updateIndex: PropTypes.func.isRequired,\n  isRespDisabled: PropTypes.bool.isRequired,\n  updateRespDisabled: PropTypes.func.isRequired,\n  getTimer: PropTypes.func.isRequired,\n  isColor: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  index: state.player.index,\n  isRespDisabled: state.player.isRespDisabled\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateIndex: () => dispatch(update()),\n  updateRespDisabled: () => dispatch(buttonsUpdate()),\n  getTimer: timer => dispatch(timerUpdate(timer))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-trivia-react-redux/src/components/Timer.js"],"names":["React","Component","connect","PropTypes","updateIndex","update","updateButtons","buttonsUpdate","getTimer","timerUpdate","Timer","constructor","state","timer","stateIndex","renderFunction","bind","componentDidMount","INTERVAL","setInterval","setState","prev","componentDidUpdate","index","isColor","props","setNewState","updateTimer","updateRespDisabled","setTimeout","render","isRespDisabled","propTypes","number","isRequired","func","bool","mapStateToProps","player","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  updateIndex as update,\n  updateButtons as buttonsUpdate,\n  getTimer as timerUpdate,\n} from '../actions/Index';\n\nclass Timer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      timer: 30,\n      stateIndex: 0,\n    };\n    this.renderFunction = this.renderFunction.bind(this);\n  }\n\n  componentDidMount() {\n    const INTERVAL = 1000;\n    const { timer } = this.state;\n    setInterval(() => {\n      if (timer !== 0) {\n        this.setState((prev) => this.setState({ timer: prev.timer - 1 }));\n      }\n    }, INTERVAL);\n  }\n\n  componentDidUpdate() {\n    const { timer, stateIndex } = this.state;\n    const { index, getTimer, isColor } = this.props;\n\n    if (isColor) {\n      getTimer(timer);\n    }\n\n    if (stateIndex !== index) { // trigger caso haja alguma alteração no index\n      this.setNewState();\n    }\n    if (timer === 0) {\n      this.updateTimer();\n    }\n  }\n\n  setNewState() { // caso a pessoa responda.\n    const { index } = this.props;\n    this.setState({ stateIndex: index, timer: 30 });\n    const { stateIndex } = this.state;\n    return stateIndex;\n  }\n\n  updateTimer() { // caso o tempo esgote.\n    const { updateIndex, updateRespDisabled } = this.props;\n    updateRespDisabled();\n    this.setState({ timer: 30 }, () => {\n      const INTERVAL = 5000;\n      setTimeout(() => {\n        this.setState({ timer: 30 });\n        updateRespDisabled();\n        updateIndex();\n      }, INTERVAL);\n    });\n  }\n\n  renderFunction() {\n    const { index } = this.props;\n    const { timer } = this.state;\n    return (\n      <>\n        <p>\n          { timer }\n          {' '}\n          segundos restantes\n        </p>\n        <p>\n          { index + 1 }\n          ª pergunta\n        </p>\n      </>\n    );\n  }\n\n  render() {\n    const { isRespDisabled } = this.props;\n    return (\n      <div className=\"timer-container\">\n        { isRespDisabled ? null : this.renderFunction() }\n      </div>\n    );\n  }\n}\n\nTimer.propTypes = {\n  index: PropTypes.number.isRequired,\n  updateIndex: PropTypes.func.isRequired,\n  isRespDisabled: PropTypes.bool.isRequired,\n  updateRespDisabled: PropTypes.func.isRequired,\n  getTimer: PropTypes.func.isRequired,\n  isColor: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  index: state.player.index,\n  isRespDisabled: state.player.isRespDisabled,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateIndex: () => dispatch(update()),\n  updateRespDisabled: () => dispatch(buttonsUpdate()),\n  getTimer: (timer) => dispatch(timerUpdate(timer)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\n"]},"metadata":{},"sourceType":"module"}