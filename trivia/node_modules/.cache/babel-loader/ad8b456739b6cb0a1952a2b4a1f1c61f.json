{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-trivia-react-redux/src/pages/Feedback.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport md5 from 'crypto-js/md5';\n\nclass Feedback extends Component {\n  constructor() {\n    super();\n    this.state = {\n      img: ''\n    };\n    this.renderDados = this.renderDados.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderDados();\n  }\n\n  renderDados() {\n    const {\n      email\n    } = this.props;\n    console.log(email);\n    const hash = md5(email).toString();\n    this.setState({\n      img: `https://www.gravatar.com/avatar/${hash}`\n    });\n  }\n\n  render() {\n    const {\n      img\n    } = this.state;\n    const {\n      name\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": \"header-profile-picture\",\n      src: img,\n      alt: \"profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      \"data-testid\": \"header-player-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, name));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  email: state.player.gravatarEmail,\n  name: state.player.name\n});\n\nexport default connect(mapStateToProps)(Feedback);\nFeedback.propTypes = {\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-trivia-react-redux/src/pages/Feedback.js"],"names":["React","Component","connect","PropTypes","md5","Feedback","constructor","state","img","renderDados","bind","componentDidMount","email","props","console","log","hash","toString","setState","render","name","mapStateToProps","player","gravatarEmail","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC/BK,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE;AADM,KAAb;AAGA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,WAAL;AACD;;AAEDA,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEG,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,UAAMI,IAAI,GAAGZ,GAAG,CAACQ,KAAD,CAAH,CAAWK,QAAX,EAAb;AACA,SAAKC,QAAL,CAAc;AAAEV,MAAAA,GAAG,EAAG,mCAAkCQ,IAAK;AAA/C,KAAd;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA;AAAF,QAAU,KAAKD,KAArB;AACA,UAAM;AAAEa,MAAAA;AAAF,QAAW,KAAKP,KAAtB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,qBAAY,wBAAjB;AAA0C,MAAA,GAAG,EAAGL,GAAhD;AAAsD,MAAA,GAAG,EAAC,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAI,qBAAY,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCY,IAAvC,CAFF,CADF;AAMD;;AA7B8B;;AAgCjC,MAAMC,eAAe,GAAId,KAAD,KAAY;AAClCK,EAAAA,KAAK,EAAEL,KAAK,CAACe,MAAN,CAAaC,aADc;AAElCH,EAAAA,IAAI,EAAEb,KAAK,CAACe,MAAN,CAAaF;AAFe,CAAZ,CAAxB;;AAKA,eAAelB,OAAO,CAACmB,eAAD,CAAP,CAAyBhB,QAAzB,CAAf;AAEAA,QAAQ,CAACmB,SAAT,GAAqB;AACnBZ,EAAAA,KAAK,EAAET,SAAS,CAACsB,MAAV,CAAiBC,UADL;AAEnBN,EAAAA,IAAI,EAAEjB,SAAS,CAACsB,MAAV,CAAiBC;AAFJ,CAArB","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport md5 from 'crypto-js/md5';\n\nclass Feedback extends Component {\n  constructor() {\n    super();\n    this.state = {\n      img: '',\n    };\n    this.renderDados = this.renderDados.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderDados();\n  }\n\n  renderDados() {\n    const { email } = this.props;\n    console.log(email);\n    const hash = md5(email).toString();\n    this.setState({ img: `https://www.gravatar.com/avatar/${hash}` });\n  }\n\n  render() {\n    const { img } = this.state;\n    const { name } = this.props;\n    return (\n      <div>\n        <img data-testid=\"header-profile-picture\" src={ img } alt=\"profile\" />\n        <h1 data-testid=\"header-player-name\">{ name }</h1>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.player.gravatarEmail,\n  name: state.player.name,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n\nFeedback.propTypes = {\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}