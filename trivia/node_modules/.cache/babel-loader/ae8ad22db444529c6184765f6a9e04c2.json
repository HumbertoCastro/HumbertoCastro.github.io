{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-trivia-react-redux/src/pages/Settings.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { SaveOptions } from '../actions/Index';\n\nclass Settings extends Component {\n  constructor() {\n    super();\n    this.state = {\n      difficulty: '',\n      category: '',\n      questions: ''\n    };\n    this.HandleInput = this.HandleInput.bind(this);\n    this.beginGame = this.beginGame.bind(this);\n  }\n\n  beginGame() {\n    const {\n      storegeData\n    } = this.props;\n    storegeData(this.state);\n  }\n\n  HandleInput(_ref) {\n    let {\n      target\n    } = _ref;\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"category-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Category-button\",\n      type: \"button\",\n      name: \"category\",\n      value: \"22\",\n      onClick: this.HandleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, \"geografy\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Category-button\",\n      type: \"button\",\n      name: \"category\",\n      value: \"21\",\n      onClick: this.HandleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, \"Sports\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Category-button\",\n      type: \"button\",\n      name: \"category\",\n      value: \"11\",\n      onClick: this.HandleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"Movies\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Category-button\",\n      type: \"button\",\n      name: \"category\",\n      value: \"10\",\n      onClick: this.HandleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"Books\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"difficulty-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"DIFFICULTY\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"difficulty-button\",\n      type: \"button\",\n      name: \"dif\",\n      value: \"easy\",\n      onClick: this.HandleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"EASY\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"difficulty-button\",\n      type: \"button\",\n      name: \"dif\",\n      value: \"medium\",\n      onClick: this.HandleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"MEDIUM\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"difficulty-button\",\n      type: \"button\",\n      name: \"dif\",\n      value: \"hard\",\n      onClick: this.HandleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"HARD\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number-questions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"questions-button\",\n      type: \"button\",\n      name: \"questions\",\n      value: \"5\",\n      onClick: this.HandleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"questions-button\",\n      type: \"button\",\n      name: \"questions\",\n      value: \"10\",\n      onClick: this.HandleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, \"10\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"questions-button\",\n      type: \"button\",\n      name: \"questions\",\n      value: \"20\",\n      onClick: this.HandleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \"20\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.beginGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, \"BEGIN\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  storegeData: data => dispatch(SaveOptions(data))\n});\n\nexport default connect(null, mapDispatchToProps)(Settings);\nSettings.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired,\n  storegeData: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-trivia-react-redux/src/pages/Settings.js"],"names":["React","Component","PropTypes","connect","SaveOptions","Settings","constructor","state","difficulty","category","questions","HandleInput","bind","beginGame","storegeData","props","target","name","value","setState","render","mapDispatchToProps","dispatch","data","propTypes","history","shape","push","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { SaveOptions } from '../actions/Index';\n\nclass Settings extends Component {\n  constructor() {\n    super();\n    this.state = {\n      difficulty: '',\n      category: '',\n      questions: '',\n    };\n    this.HandleInput = this.HandleInput.bind(this);\n    this.beginGame = this.beginGame.bind(this);\n  }\n\n  beginGame() {\n    const { storegeData } = this.props;\n    storegeData(this.state);\n  }\n\n  HandleInput({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    return (\n      <div className=\"login-container\">\n        <form>\n          <div className=\"category-div\">\n            <h1>Category</h1>\n            <button\n              className=\"Category-button\"\n              type=\"button\"\n              name=\"category\"\n              value=\"22\"\n              onClick={ this.HandleInput }\n            >\n              geografy\n            </button>\n            <button\n              className=\"Category-button\"\n              type=\"button\"\n              name=\"category\"\n              value=\"21\"\n              onClick={ this.HandleInput }\n            >\n              Sports\n            </button>\n            <button\n              className=\"Category-button\"\n              type=\"button\"\n              name=\"category\"\n              value=\"11\"\n              onClick={ this.HandleInput }\n            >\n              Movies\n            </button>\n            <button\n              className=\"Category-button\"\n              type=\"button\"\n              name=\"category\"\n              value=\"10\"\n              onClick={ this.HandleInput }\n            >\n              Books\n            </button>\n          </div>\n          <div className=\"difficulty-div\">\n            <h1>DIFFICULTY</h1>\n            <button\n              className=\"difficulty-button\"\n              type=\"button\"\n              name=\"dif\"\n              value=\"easy\"\n              onClick={ this.HandleInput }\n            >\n              EASY\n            </button>\n            <button\n              className=\"difficulty-button\"\n              type=\"button\"\n              name=\"dif\"\n              value=\"medium\"\n              onClick={ this.HandleInput }\n            >\n              MEDIUM\n            </button>\n            <button\n              className=\"difficulty-button\"\n              type=\"button\"\n              name=\"dif\"\n              value=\"hard\"\n              onClick={ this.HandleInput }\n            >\n              HARD\n            </button>\n          </div>\n          <div className=\"number-questions\">\n            <button\n              className=\"questions-button\"\n              type=\"button\"\n              name=\"questions\"\n              value=\"5\"\n              onClick={ this.HandleInput }\n            >\n              5\n            </button>\n            <button\n              className=\"questions-button\"\n              type=\"button\"\n              name=\"questions\"\n              value=\"10\"\n              onClick={ this.HandleInput }\n            >\n              10\n            </button>\n            <button\n              className=\"questions-button\"\n              type=\"button\"\n              name=\"questions\"\n              value=\"20\"\n              onClick={ this.HandleInput }\n            >\n              20\n            </button>\n          </div>\n          <button type=\"button\" onClick={ this.beginGame }>\n            BEGIN\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  storegeData: (data) => dispatch(SaveOptions(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(Settings);\n\nSettings.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  storegeData: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}