{"ast":null,"code":"const INITIAL_STATE = {\n  name: '',\n  gravatarEmail: '',\n  assertions: 0,\n  timer: 30,\n  score: 0,\n  url: '',\n  index: 0,\n  isRespDisabled: false\n};\n\nconst player = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_EMAIL':\n      return { ...state\n      };\n\n    case 'SAVE_DATA':\n      console.log(action.dados);\n      return { ...state,\n        name: action.dados.name,\n        gravatarEmail: action.dados.email\n      };\n\n    case 'UPDATE_INDEX':\n      {\n        const {\n          index\n        } = state;\n        const newIndex = index + 1;\n        return { ...state,\n          index: newIndex\n        };\n      }\n\n    case 'UPDATE_BUTTONS':\n      {\n        const {\n          isRespDisabled: boolean\n        } = state;\n        const isRespDisabled = !boolean;\n        return { ...state,\n          isRespDisabled\n        };\n      }\n\n    case 'GET_TIMER':\n      {\n        const {\n          timer\n        } = action;\n        return { ...state,\n          timer\n        };\n      }\n\n    case 'UPDATE_SCORE':\n      {\n        const {\n          score: actionScore\n        } = action;\n        const {\n          score: stateScore,\n          assertions: stateAssertions\n        } = state;\n        const score = actionScore + stateScore;\n        const assertions = stateAssertions + 1;\n        return { ...state,\n          score,\n          assertions\n        };\n      }\n\n    case 'GET_GRAVATAR_IMAGE':\n      {\n        const {\n          url\n        } = action;\n        return { ...state,\n          url\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nexport default player;","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-trivia-react-redux/src/reducers/player.js"],"names":["INITIAL_STATE","name","gravatarEmail","assertions","timer","score","url","index","isRespDisabled","player","state","action","type","console","log","dados","email","newIndex","boolean","actionScore","stateScore","stateAssertions"],"mappings":"AAAA,MAAMA,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,aAAa,EAAE,EAFK;AAGpBC,EAAAA,UAAU,EAAE,CAHQ;AAIpBC,EAAAA,KAAK,EAAE,EAJa;AAKpBC,EAAAA,KAAK,EAAE,CALa;AAMpBC,EAAAA,GAAG,EAAE,EANe;AAOpBC,EAAAA,KAAK,EAAE,CAPa;AAQpBC,EAAAA,cAAc,EAAE;AARI,CAAtB;;AAWA,MAAMC,MAAM,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BV,aAA0B;AAAA,MAAXW,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAK,WAAL;AACE,aAAO,EAAE,GAAGF;AAAL,OAAP;;AACF,SAAK,WAAL;AACEG,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,KAAnB;AACA,aAAO,EAAE,GAAGL,KAAL;AAAYT,QAAAA,IAAI,EAAEU,MAAM,CAACI,KAAP,CAAad,IAA/B;AAAqCC,QAAAA,aAAa,EAAES,MAAM,CAACI,KAAP,CAAaC;AAAjE,OAAP;;AACF,SAAK,cAAL;AAAqB;AACnB,cAAM;AAAET,UAAAA;AAAF,YAAYG,KAAlB;AACA,cAAMO,QAAQ,GAAGV,KAAK,GAAG,CAAzB;AACA,eAAO,EAAE,GAAGG,KAAL;AAAYH,UAAAA,KAAK,EAAEU;AAAnB,SAAP;AACD;;AACD,SAAK,gBAAL;AAAuB;AACrB,cAAM;AAAET,UAAAA,cAAc,EAAEU;AAAlB,YAA8BR,KAApC;AACA,cAAMF,cAAc,GAAG,CAACU,OAAxB;AACA,eAAO,EAAE,GAAGR,KAAL;AAAYF,UAAAA;AAAZ,SAAP;AACD;;AACD,SAAK,WAAL;AAAkB;AAChB,cAAM;AAAEJ,UAAAA;AAAF,YAAYO,MAAlB;AACA,eAAO,EAAE,GAAGD,KAAL;AAAYN,UAAAA;AAAZ,SAAP;AACD;;AACD,SAAK,cAAL;AAAqB;AACnB,cAAM;AAAEC,UAAAA,KAAK,EAAEc;AAAT,YAAyBR,MAA/B;AACA,cAAM;AAAEN,UAAAA,KAAK,EAAEe,UAAT;AAAqBjB,UAAAA,UAAU,EAAEkB;AAAjC,YAAqDX,KAA3D;AACA,cAAML,KAAK,GAAGc,WAAW,GAAGC,UAA5B;AACA,cAAMjB,UAAU,GAAGkB,eAAe,GAAG,CAArC;AACA,eAAO,EAAE,GAAGX,KAAL;AAAYL,UAAAA,KAAZ;AAAmBF,UAAAA;AAAnB,SAAP;AACD;;AACD,SAAK,oBAAL;AAA2B;AACzB,cAAM;AAAEG,UAAAA;AAAF,YAAUK,MAAhB;AACA,eAAO,EAAE,GAAGD,KAAL;AAAYJ,UAAAA;AAAZ,SAAP;AACD;;AACD;AACE,aAAO,EAAE,GAAGI;AAAL,OAAP;AAhCF;AAkCD,CAnCD;;AAqCA,eAAeD,MAAf","sourcesContent":["const INITIAL_STATE = {\n  name: '',\n  gravatarEmail: '',\n  assertions: 0,\n  timer: 30,\n  score: 0,\n  url: '',\n  index: 0,\n  isRespDisabled: false,\n};\n\nconst player = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case 'ADD_EMAIL':\n    return { ...state };\n  case 'SAVE_DATA':\n    console.log(action.dados);\n    return { ...state, name: action.dados.name, gravatarEmail: action.dados.email };\n  case 'UPDATE_INDEX': {\n    const { index } = state;\n    const newIndex = index + 1;\n    return { ...state, index: newIndex };\n  }\n  case 'UPDATE_BUTTONS': {\n    const { isRespDisabled: boolean } = state;\n    const isRespDisabled = !boolean;\n    return { ...state, isRespDisabled };\n  }\n  case 'GET_TIMER': {\n    const { timer } = action;\n    return { ...state, timer };\n  }\n  case 'UPDATE_SCORE': {\n    const { score: actionScore } = action;\n    const { score: stateScore, assertions: stateAssertions } = state;\n    const score = actionScore + stateScore;\n    const assertions = stateAssertions + 1;\n    return { ...state, score, assertions };\n  }\n  case 'GET_GRAVATAR_IMAGE': {\n    const { url } = action;\n    return { ...state, url };\n  }\n  default:\n    return { ...state };\n  }\n};\n\nexport default player;\n"]},"metadata":{},"sourceType":"module"}