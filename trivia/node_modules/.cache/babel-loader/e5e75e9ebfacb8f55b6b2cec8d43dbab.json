{"ast":null,"code":"var _jsxFileName = \"/home/humberto/Projetos/sd-016-a-project-trivia-react-redux/src/pages/Trivia.js\";\nimport React, { Component } from 'react';\nimport Header from '../components/Header';\nimport shuffle from '../services/shuffle';\n\nclass Trivia extends Component {\n  constructor() {\n    super();\n    this.state = {\n      perguntas: '',\n      loading: true\n    };\n    this.request = this.request.bind(this);\n    this.renderPerguntas = this.renderPerguntas.bind(this);\n  }\n\n  componentDidMount() {\n    this.request();\n  }\n\n  request() {\n    const token = localStorage.getItem('token');\n    fetch(`https://opentdb.com/api.php?amount=5&token=${token}`).then(r => r.json()).then(perguntas => {\n      this.setState({\n        perguntas,\n        loading: false\n      });\n    });\n  }\n\n  renderPerguntas() {\n    const {\n      perguntas\n    } = this.state;\n    return perguntas.results.map(quest => {\n      const {\n        category,\n        dificulty,\n        question\n      } = quest;\n      const Alternativas = [quest.correct_answer, ...quest.incorrect_answers];\n      const perguntasRand = shuffle(Alternativas);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: dificulty,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, category), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, question), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, perguntasRand.map((x, Index) => /*#__PURE__*/React.createElement(\"p\", {\n        key: Index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 52\n        }\n      }, x))));\n    });\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, loading ? null : this.renderPerguntas()));\n  }\n\n}\n\nexport default Trivia;","map":{"version":3,"sources":["/home/humberto/Projetos/sd-016-a-project-trivia-react-redux/src/pages/Trivia.js"],"names":["React","Component","Header","shuffle","Trivia","constructor","state","perguntas","loading","request","bind","renderPerguntas","componentDidMount","token","localStorage","getItem","fetch","then","r","json","setState","results","map","quest","category","dificulty","question","Alternativas","correct_answer","incorrect_answers","perguntasRand","x","Index","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAC7BI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAIA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,OAAL;AACD;;AAEDA,EAAAA,OAAO,GAAG;AACR,UAAMI,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAC,IAAAA,KAAK,CAAE,8CAA6CH,KAAM,EAArD,CAAL,CACGI,IADH,CACSC,CAAD,IAAOA,CAAC,CAACC,IAAF,EADf,EACyBF,IADzB,CAC+BV,SAAD,IAAe;AACzC,WAAKa,QAAL,CAAc;AAAEb,QAAAA,SAAF;AAAaC,QAAAA,OAAO,EAAE;AAAtB,OAAd;AACD,KAHH;AAID;;AAEDG,EAAAA,eAAe,GAAG;AAChB,UAAM;AAAEJ,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AACA,WACEC,SAAS,CAACc,OAAV,CAAkBC,GAAlB,CAAuBC,KAAD,IAAW;AAC/B,YAAM;AACJC,QAAAA,QADI;AAEJC,QAAAA,SAFI;AAGJC,QAAAA;AAHI,UAIFH,KAJJ;AAKA,YAAMI,YAAY,GAAG,CAACJ,KAAK,CAACK,cAAP,EAAuB,GAAGL,KAAK,CAACM,iBAAhC,CAArB;AACA,YAAMC,aAAa,GAAG3B,OAAO,CAACwB,YAAD,CAA7B;AACA,0BACE;AAAK,QAAA,GAAG,EAAGF,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,QAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKE,QAAL,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMI,aAAa,CAACR,GAAd,CAAkB,CAACS,CAAD,EAAIC,KAAJ,kBAAe;AAAG,QAAA,GAAG,EAAGA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBD,CAAnB,CAAjC,CAAN,CAHF,CADF;AAOD,KAfD,CADF;AAkBD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEzB,MAAAA;AAAF,QAAc,KAAKF,KAAzB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOE,OAAO,GAAG,IAAH,GAAU,KAAKG,eAAL,EAAxB,CAFF,CADF;AAMD;;AArD4B;;AAwD/B,eAAeP,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport shuffle from '../services/shuffle';\n\nclass Trivia extends Component {\n  constructor() {\n    super();\n    this.state = {\n      perguntas: '',\n      loading: true,\n    };\n    this.request = this.request.bind(this);\n    this.renderPerguntas = this.renderPerguntas.bind(this);\n  }\n\n  componentDidMount() {\n    this.request();\n  }\n\n  request() {\n    const token = localStorage.getItem('token');\n    fetch(`https://opentdb.com/api.php?amount=5&token=${token}`)\n      .then((r) => r.json()).then((perguntas) => {\n        this.setState({ perguntas, loading: false });\n      });\n  }\n\n  renderPerguntas() {\n    const { perguntas } = this.state;\n    return (\n      perguntas.results.map((quest) => {\n        const {\n          category,\n          dificulty,\n          question,\n        } = quest;\n        const Alternativas = [quest.correct_answer, ...quest.incorrect_answers];\n        const perguntasRand = shuffle(Alternativas);\n        return (\n          <div key={ dificulty }>\n            <p>{ category }</p>\n            <p>{ question }</p>\n            <div>{perguntasRand.map((x, Index) => (<p key={ Index }>{ x }</p>))}</div>\n          </div>\n        );\n      })\n    );\n  }\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <div>\n        <Header />\n        <div>{ loading ? null : this.renderPerguntas() }</div>\n      </div>\n    );\n  }\n}\n\nexport default Trivia;\n"]},"metadata":{},"sourceType":"module"}